stages:
  - install_npm_dependencies
  - sonarcloud_analysis
  - docker_build
  - scan_image
  - push_to_ecr
  
variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
  GIT_DEPTH: "0"
  ECR_REPO: "358966077154.dkr.ecr.us-east-1.amazonaws.com/gitlabcicd00"

build_job: 
  stage: install_npm_dependencies
  tags: 
    - GitLab_EC2_Runner
  script:
    - sudo apt install nodejs -y
    - sudo apt install npm -y
    - sudo apt install docker.io -y && sudo chmod 666 /var/run/docker.sock
    - npm install

sonarcloud-check:
  stage: sonarcloud_analysis
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - main

docker_build_job:
  stage: docker_build
  script: 
    - docker build -t gitlabcicd00:latest .
  only:
    - main
  tags:
    - GitLab_EC2_Runner

trivy_scan_job:
  stage: scan_image
  script: 
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image repo-name:$CI_COMMIT_SHA
  tags:
    - GitLab_EC2_Runner

push_image_to_ecr:
  stage: push_to_ecr
  script: 
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 358966077154.dkr.ecr.us-east-1.amazonaws.com
    - docker tag gitlabcicd00:latest $ECR_REPO:latest
    - docker push $ECR_REPO:latest
  only:
    - main
  tags:
    - GitLab_EC2_Runner
